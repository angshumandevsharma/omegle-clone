{"ast":null,"code":"var _jsxFileName = \"/Users/as/omegle-clone/client/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\n// ensure backend URL matches where your server runs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000');\n\n// centralized ICE configuration\nconst ICE_SERVERS = [{\n  urls: 'stun:stun.l.google.com:19302'\n}, {\n  urls: 'stun:global.stun.twilio.com:3478'\n}\n// add a TURN server here if you have one:\n// { urls: 'turn:turn.example.com:3478', username: 'user', credential: 'pass' }\n];\nfunction App() {\n  _s();\n  const [partnerId, setPartnerId] = useState(null);\n  const [initiator, setInitiator] = useState(false);\n  const pcRef = useRef(null);\n  const localStreamRef = useRef(null);\n  const partnerIdRef = useRef(null);\n  const initiatorRef = useRef(false);\n\n  // We need a promise to wait for local media being ready for addTrack operations\n  const localMediaReady = useRef(null);\n  const localMediaResolve = useRef(null);\n\n  // Create peer connection and attach handlers\n  const createPeerConnection = () => {\n    const pc = new RTCPeerConnection({\n      iceServers: ICE_SERVERS\n    });\n    pc.onicecandidate = event => {\n      if (event.candidate && partnerIdRef.current) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          partnerId: partnerIdRef.current\n        });\n      }\n    };\n    pc.ontrack = event => {\n      // remote stream(s) arrive here\n      const remoteVideo = document.getElementById('remoteVideo');\n      if (remoteVideo && event.streams && event.streams[0]) {\n        remoteVideo.srcObject = event.streams[0];\n      }\n    };\n    pc.onconnectionstatechange = () => {\n      console.log('PC state:', pc.connectionState);\n    };\n    return pc;\n  };\n\n  // Add local tracks to a given peer connection (if local stream exists)\n  const attachLocalTracks = pc => {\n    if (localStreamRef.current && pc) {\n      try {\n        localStreamRef.current.getTracks().forEach(track => pc.addTrack(track, localStreamRef.current));\n      } catch (e) {\n        console.warn('attachLocalTracks error:', e);\n      }\n    }\n  };\n  useEffect(() => {\n    // only run once\n    if (localMediaReady.current) return;\n    localMediaReady.current = new Promise(resolve => {\n      localMediaResolve.current = resolve;\n    });\n\n    // create initial peer connection\n    pcRef.current = createPeerConnection();\n\n    // get local media once\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localStreamRef.current = stream;\n      const localVideo = document.getElementById('localVideo');\n      if (localVideo) localVideo.srcObject = stream;\n      attachLocalTracks(pcRef.current);\n      localMediaResolve.current();\n    }).catch(err => {\n      console.error('getUserMedia error:', err);\n      localMediaResolve.current();\n    });\n\n    // request to join queue\n    socket.emit('join');\n\n    // handle partner found\n    socket.on('partner-found', async ({\n      partnerId: pid,\n      initiator: isInitiator\n    }) => {\n      console.log('partner-found', pid, isInitiator);\n      setPartnerId(pid);\n      partnerIdRef.current = pid;\n      setInitiator(isInitiator);\n      initiatorRef.current = isInitiator;\n\n      // If our pc was closed previously, recreate and reattach tracks\n      if (!pcRef.current || pcRef.current.connectionState === 'closed') {\n        pcRef.current = createPeerConnection();\n        await localMediaReady.current;\n        attachLocalTracks(pcRef.current);\n      }\n\n      // ONLY initiator creates the offer\n      if (isInitiator) {\n        try {\n          await localMediaReady.current;\n          const offer = await pcRef.current.createOffer();\n          await pcRef.current.setLocalDescription(offer);\n          socket.emit('offer', {\n            offer,\n            partnerId: pid\n          });\n          console.log('Sent offer to', pid);\n        } catch (err) {\n          console.error('Failed to create/send offer:', err);\n        }\n      }\n    });\n\n    // handle offer\n    socket.on('offer', async ({\n      offer,\n      partnerId: fromId\n    }) => {\n      console.log('Received offer from', fromId);\n      // ensure pc exists and local tracks attached\n      if (!pcRef.current || pcRef.current.connectionState === 'closed') {\n        pcRef.current = createPeerConnection();\n      }\n      partnerIdRef.current = fromId;\n      try {\n        await localMediaReady.current;\n        await pcRef.current.setRemoteDescription(new RTCSessionDescription(offer));\n        // ensure local tracks are attached before answer\n        attachLocalTracks(pcRef.current);\n        const answer = await pcRef.current.createAnswer();\n        await pcRef.current.setLocalDescription(answer);\n        socket.emit('answer', {\n          answer,\n          partnerId: fromId\n        });\n        console.log('Sent answer to', fromId);\n      } catch (err) {\n        console.error('Error handling offer:', err);\n      }\n    });\n\n    // handle answer\n    socket.on('answer', async ({\n      answer\n    }) => {\n      console.log('Received answer');\n      try {\n        if (pcRef.current) {\n          await pcRef.current.setRemoteDescription(new RTCSessionDescription(answer));\n        }\n      } catch (err) {\n        console.error('Error setting remote description from answer:', err);\n      }\n    });\n\n    // handle ICE candidate\n    socket.on('ice-candidate', async ({\n      candidate\n    }) => {\n      try {\n        if (pcRef.current && candidate) {\n          await pcRef.current.addIceCandidate(new RTCIceCandidate(candidate));\n        }\n      } catch (err) {\n        console.error('Error adding remote ICE candidate:', err);\n      }\n    });\n\n    // partner disconnected -> cleanup pc and requeue\n    socket.on('partner-disconnected', () => {\n      console.log('Partner disconnected');\n      setPartnerId(null);\n      partnerIdRef.current = null;\n      initiatorRef.current = false;\n      setInitiator(false);\n\n      // close and null out pc so it will be recreated for next match\n      if (pcRef.current) {\n        try {\n          pcRef.current.close();\n        } catch (e) {}\n        pcRef.current = null;\n      }\n\n      // rejoin queue automatically\n      socket.emit('join');\n    });\n\n    // cleanup on component unmount\n    return () => {\n      try {\n        socket.off('partner-found');\n      } catch {}\n      try {\n        socket.off('offer');\n      } catch {}\n      try {\n        socket.off('answer');\n      } catch {}\n      try {\n        socket.off('ice-candidate');\n      } catch {}\n      try {\n        socket.off('partner-disconnected');\n      } catch {}\n      if (pcRef.current) {\n        try {\n          pcRef.current.close();\n        } catch {}\n        pcRef.current = null;\n      }\n      if (localStreamRef.current) {\n        try {\n          localStreamRef.current.getTracks().forEach(t => t.stop());\n        } catch {}\n        localStreamRef.current = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Omegle Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"localVideo\",\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          style: {\n            width: 320,\n            height: 240,\n            background: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Partner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"remoteVideo\",\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            width: 320,\n            height: 240,\n            background: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Partner ID: \", partnerId || 'none']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Role: \", initiator ? 'initiator' : 'waiter']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Fed3VjKcRnociGVYDuzccNQYogs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","process","env","REACT_APP_BACKEND_URL","ICE_SERVERS","urls","App","_s","partnerId","setPartnerId","initiator","setInitiator","pcRef","localStreamRef","partnerIdRef","initiatorRef","localMediaReady","localMediaResolve","createPeerConnection","pc","RTCPeerConnection","iceServers","onicecandidate","event","candidate","current","emit","ontrack","remoteVideo","document","getElementById","streams","srcObject","onconnectionstatechange","console","log","connectionState","attachLocalTracks","getTracks","forEach","track","addTrack","e","warn","Promise","resolve","navigator","mediaDevices","getUserMedia","video","audio","then","stream","localVideo","catch","err","error","on","pid","isInitiator","offer","createOffer","setLocalDescription","fromId","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addIceCandidate","RTCIceCandidate","close","off","t","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","id","autoPlay","playsInline","muted","width","height","background","marginTop","_c","$RefreshReg$"],"sources":["/Users/as/omegle-clone/client/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\n// ensure backend URL matches where your server runs\nconst socket = io(process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000');\n\n// centralized ICE configuration\nconst ICE_SERVERS = [\n  { urls: 'stun:stun.l.google.com:19302' },\n  { urls: 'stun:global.stun.twilio.com:3478' }\n  // add a TURN server here if you have one:\n  // { urls: 'turn:turn.example.com:3478', username: 'user', credential: 'pass' }\n];\n\nfunction App() {\n  const [partnerId, setPartnerId] = useState(null);\n  const [initiator, setInitiator] = useState(false);\n\n  const pcRef = useRef(null);\n  const localStreamRef = useRef(null);\n  const partnerIdRef = useRef(null);\n  const initiatorRef = useRef(false);\n\n  // We need a promise to wait for local media being ready for addTrack operations\n  const localMediaReady = useRef(null);\n  const localMediaResolve = useRef(null);\n\n  // Create peer connection and attach handlers\n  const createPeerConnection = () => {\n    const pc = new RTCPeerConnection({ iceServers: ICE_SERVERS });\n\n    pc.onicecandidate = (event) => {\n      if (event.candidate && partnerIdRef.current) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          partnerId: partnerIdRef.current\n        });\n      }\n    };\n\n    pc.ontrack = (event) => {\n      // remote stream(s) arrive here\n      const remoteVideo = document.getElementById('remoteVideo');\n      if (remoteVideo && event.streams && event.streams[0]) {\n        remoteVideo.srcObject = event.streams[0];\n      }\n    };\n\n    pc.onconnectionstatechange = () => {\n      console.log('PC state:', pc.connectionState);\n    };\n\n    return pc;\n  };\n\n  // Add local tracks to a given peer connection (if local stream exists)\n  const attachLocalTracks = (pc) => {\n    if (localStreamRef.current && pc) {\n      try {\n        localStreamRef.current.getTracks().forEach(track => pc.addTrack(track, localStreamRef.current));\n      } catch (e) {\n        console.warn('attachLocalTracks error:', e);\n      }\n    }\n  };\n\n  useEffect(() => {\n    // only run once\n    if (localMediaReady.current) return;\n\n    localMediaReady.current = new Promise((resolve) => {\n      localMediaResolve.current = resolve;\n    });\n\n    // create initial peer connection\n    pcRef.current = createPeerConnection();\n\n    // get local media once\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        localStreamRef.current = stream;\n        const localVideo = document.getElementById('localVideo');\n        if (localVideo) localVideo.srcObject = stream;\n        attachLocalTracks(pcRef.current);\n        localMediaResolve.current();\n      })\n      .catch((err) => {\n        console.error('getUserMedia error:', err);\n        localMediaResolve.current();\n      });\n\n    // request to join queue\n    socket.emit('join');\n\n    // handle partner found\n    socket.on('partner-found', async ({ partnerId: pid, initiator: isInitiator }) => {\n      console.log('partner-found', pid, isInitiator);\n      setPartnerId(pid);\n      partnerIdRef.current = pid;\n      setInitiator(isInitiator);\n      initiatorRef.current = isInitiator;\n\n      // If our pc was closed previously, recreate and reattach tracks\n      if (!pcRef.current || pcRef.current.connectionState === 'closed') {\n        pcRef.current = createPeerConnection();\n        await localMediaReady.current;\n        attachLocalTracks(pcRef.current);\n      }\n\n      // ONLY initiator creates the offer\n      if (isInitiator) {\n        try {\n          await localMediaReady.current;\n          const offer = await pcRef.current.createOffer();\n          await pcRef.current.setLocalDescription(offer);\n          socket.emit('offer', { offer, partnerId: pid });\n          console.log('Sent offer to', pid);\n        } catch (err) {\n          console.error('Failed to create/send offer:', err);\n        }\n      }\n    });\n\n    // handle offer\n    socket.on('offer', async ({ offer, partnerId: fromId }) => {\n      console.log('Received offer from', fromId);\n      // ensure pc exists and local tracks attached\n      if (!pcRef.current || pcRef.current.connectionState === 'closed') {\n        pcRef.current = createPeerConnection();\n      }\n      partnerIdRef.current = fromId;\n      try {\n        await localMediaReady.current;\n        await pcRef.current.setRemoteDescription(new RTCSessionDescription(offer));\n        // ensure local tracks are attached before answer\n        attachLocalTracks(pcRef.current);\n        const answer = await pcRef.current.createAnswer();\n        await pcRef.current.setLocalDescription(answer);\n        socket.emit('answer', { answer, partnerId: fromId });\n        console.log('Sent answer to', fromId);\n      } catch (err) {\n        console.error('Error handling offer:', err);\n      }\n    });\n\n    // handle answer\n    socket.on('answer', async ({ answer }) => {\n      console.log('Received answer');\n      try {\n        if (pcRef.current) {\n          await pcRef.current.setRemoteDescription(new RTCSessionDescription(answer));\n        }\n      } catch (err) {\n        console.error('Error setting remote description from answer:', err);\n      }\n    });\n\n    // handle ICE candidate\n    socket.on('ice-candidate', async ({ candidate }) => {\n      try {\n        if (pcRef.current && candidate) {\n          await pcRef.current.addIceCandidate(new RTCIceCandidate(candidate));\n        }\n      } catch (err) {\n        console.error('Error adding remote ICE candidate:', err);\n      }\n    });\n\n    // partner disconnected -> cleanup pc and requeue\n    socket.on('partner-disconnected', () => {\n      console.log('Partner disconnected');\n      setPartnerId(null);\n      partnerIdRef.current = null;\n      initiatorRef.current = false;\n      setInitiator(false);\n\n      // close and null out pc so it will be recreated for next match\n      if (pcRef.current) {\n        try { pcRef.current.close(); } catch (e) {}\n        pcRef.current = null;\n      }\n\n      // rejoin queue automatically\n      socket.emit('join');\n    });\n\n    // cleanup on component unmount\n    return () => {\n      try { socket.off('partner-found'); } catch {}\n      try { socket.off('offer'); } catch {}\n      try { socket.off('answer'); } catch {}\n      try { socket.off('ice-candidate'); } catch {}\n      try { socket.off('partner-disconnected'); } catch {}\n      if (pcRef.current) {\n        try { pcRef.current.close(); } catch {}\n        pcRef.current = null;\n      }\n      if (localStreamRef.current) {\n        try { localStreamRef.current.getTracks().forEach(t => t.stop()); } catch {}\n        localStreamRef.current = null;\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Omegle Clone</h1>\n      <div style={{ display: 'flex', gap: 10 }}>\n        <div>\n          <h3>You</h3>\n          <video id=\"localVideo\" autoPlay playsInline muted style={{ width: 320, height: 240, background: '#000' }} />\n        </div>\n        <div>\n          <h3>Partner</h3>\n          <video id=\"remoteVideo\" autoPlay playsInline style={{ width: 320, height: 240, background: '#000' }} />\n        </div>\n      </div>\n      <div style={{ marginTop: 12 }}>\n        <div>Partner ID: {partnerId || 'none'}</div>\n        <div>Role: {initiator ? 'initiator' : 'waiter'}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}