{"ast":null,"code":"var _jsxFileName = \"/Users/as/omegle-clone/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // backend URL\n\nfunction App() {\n  _s();\n  const [partnerId, setPartnerId] = useState(null);\n  const [initiator, setInitiator] = useState(false);\n  const peerConnection = useRef(null);\n  useEffect(() => {\n    console.log(\"🚀 Connecting to backend...\");\n    peerConnection.current = new RTCPeerConnection();\n\n    // Handle local ICE candidates\n    peerConnection.current.onicecandidate = event => {\n      if (event.candidate && partnerId) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          partnerId\n        });\n      }\n    };\n\n    // Handle remote stream\n    peerConnection.current.ontrack = event => {\n      const remoteVideo = document.getElementById('remoteVideo');\n      if (remoteVideo) remoteVideo.srcObject = event.streams[0];\n    };\n\n    // Ask for camera/mic\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      const localVideo = document.getElementById('localVideo');\n      if (localVideo) localVideo.srcObject = stream;\n      stream.getTracks().forEach(track => peerConnection.current.addTrack(track, stream));\n    }).catch(console.error);\n\n    // Join queue\n    socket.emit('join');\n\n    // Partner found\n    socket.on('partner-found', async ({\n      partnerId,\n      initiator\n    }) => {\n      console.log('🤝 Partner found:', partnerId, 'initiator:', initiator);\n      setPartnerId(partnerId);\n      setInitiator(initiator);\n      if (initiator) {\n        try {\n          const offer = await peerConnection.current.createOffer();\n          await peerConnection.current.setLocalDescription(offer);\n          socket.emit('offer', {\n            offer,\n            partnerId\n          });\n        } catch (err) {\n          console.error('Offer creation failed:', err);\n        }\n      }\n    });\n\n    // Got offer\n    socket.on('offer', async ({\n      offer,\n      partnerId\n    }) => {\n      try {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await peerConnection.current.createAnswer();\n        await peerConnection.current.setLocalDescription(answer);\n        socket.emit('answer', {\n          answer,\n          partnerId\n        });\n      } catch (err) {\n        console.error('Answer creation failed:', err);\n      }\n    });\n\n    // Got answer\n    socket.on('answer', async ({\n      answer\n    }) => {\n      try {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(answer));\n      } catch (err) {\n        console.error('Setting remote description from answer failed:', err);\n      }\n    });\n\n    // Got ICE candidate\n    socket.on('ice-candidate', async ({\n      candidate\n    }) => {\n      try {\n        await peerConnection.current.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (err) {\n        console.error('Adding ICE candidate failed:', err);\n      }\n    });\n\n    // Partner disconnected\n    socket.on('partner-disconnected', () => {\n      console.log(\"💔 Partner disconnected\");\n      setPartnerId(null);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Omegle Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"localVideo\",\n      autoPlay: true,\n      playsInline: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"remoteVideo\",\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OaAo4yQjRJykX+Y92oGQE8sQwxk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","App","_s","partnerId","setPartnerId","initiator","setInitiator","peerConnection","console","log","current","RTCPeerConnection","onicecandidate","event","candidate","emit","ontrack","remoteVideo","document","getElementById","srcObject","streams","navigator","mediaDevices","getUserMedia","video","audio","then","stream","localVideo","getTracks","forEach","track","addTrack","catch","error","on","offer","createOffer","setLocalDescription","err","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addIceCandidate","RTCIceCandidate","children","fileName","_jsxFileName","lineNumber","columnNumber","id","autoPlay","playsInline","muted","_c","$RefreshReg$"],"sources":["/Users/as/omegle-clone/client/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:5000'); // backend URL\n\nfunction App() {\n  const [partnerId, setPartnerId] = useState(null);\n  const [initiator, setInitiator] = useState(false);\n  const peerConnection = useRef(null);\n\n  useEffect(() => {\n    console.log(\"🚀 Connecting to backend...\");\n\n    peerConnection.current = new RTCPeerConnection();\n\n    // Handle local ICE candidates\n    peerConnection.current.onicecandidate = (event) => {\n      if (event.candidate && partnerId) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          partnerId\n        });\n      }\n    };\n\n    // Handle remote stream\n    peerConnection.current.ontrack = (event) => {\n      const remoteVideo = document.getElementById('remoteVideo');\n      if (remoteVideo) remoteVideo.srcObject = event.streams[0];\n    };\n\n    // Ask for camera/mic\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        const localVideo = document.getElementById('localVideo');\n        if (localVideo) localVideo.srcObject = stream;\n        stream.getTracks().forEach(track =>\n          peerConnection.current.addTrack(track, stream)\n        );\n      })\n      .catch(console.error);\n\n    // Join queue\n    socket.emit('join');\n\n    // Partner found\n    socket.on('partner-found', async ({ partnerId, initiator }) => {\n      console.log('🤝 Partner found:', partnerId, 'initiator:', initiator);\n      setPartnerId(partnerId);\n      setInitiator(initiator);\n\n      if (initiator) {\n        try {\n          const offer = await peerConnection.current.createOffer();\n          await peerConnection.current.setLocalDescription(offer);\n          socket.emit('offer', { offer, partnerId });\n        } catch (err) {\n          console.error('Offer creation failed:', err);\n        }\n      }\n    });\n\n    // Got offer\n    socket.on('offer', async ({ offer, partnerId }) => {\n      try {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await peerConnection.current.createAnswer();\n        await peerConnection.current.setLocalDescription(answer);\n        socket.emit('answer', { answer, partnerId });\n      } catch (err) {\n        console.error('Answer creation failed:', err);\n      }\n    });\n\n    // Got answer\n    socket.on('answer', async ({ answer }) => {\n      try {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(answer));\n      } catch (err) {\n        console.error('Setting remote description from answer failed:', err);\n      }\n    });\n\n    // Got ICE candidate\n    socket.on('ice-candidate', async ({ candidate }) => {\n      try {\n        await peerConnection.current.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (err) {\n        console.error('Adding ICE candidate failed:', err);\n      }\n    });\n\n    // Partner disconnected\n    socket.on('partner-disconnected', () => {\n      console.log(\"💔 Partner disconnected\");\n      setPartnerId(null);\n    });\n\n  }, []);\n\n  return (\n    <div>\n      <h1>Omegle Clone</h1>\n      <video id=\"localVideo\" autoPlay playsInline muted></video>\n      <video id=\"remoteVideo\" autoPlay playsInline></video>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}