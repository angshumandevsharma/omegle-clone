{"ast":null,"code":"var _jsxFileName = \"/Users/as/omegle-clone/client/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\n// Match backend URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000');\n\n// Centralized ICE config\nconst ICE_SERVERS = [{\n  urls: 'stun:stun.l.google.com:19302'\n}, {\n  urls: 'stun:global.stun.twilio.com:3478'\n}\n// Add TURN here if needed\n];\nfunction App() {\n  _s();\n  const [partnerId, setPartnerId] = useState(null);\n  const [initiator, setInitiator] = useState(false);\n  const pcRef = useRef(null);\n  const localStreamRef = useRef(null);\n  const remoteStreamRef = useRef(null);\n  const partnerIdRef = useRef(null);\n  const initiatorRef = useRef(false);\n  const localMediaReady = useRef(null);\n  const localMediaResolve = useRef(null);\n  const createPeerConnection = () => {\n    const pc = new RTCPeerConnection({\n      iceServers: ICE_SERVERS\n    });\n    pc.onicecandidate = event => {\n      if (event.candidate && partnerIdRef.current) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          partnerId: partnerIdRef.current\n        });\n      }\n    };\n\n    // Handle remote stream\n    pc.ontrack = event => {\n      if (!remoteStreamRef.current) {\n        remoteStreamRef.current = new MediaStream();\n        const remoteVideo = document.getElementById('remoteVideo');\n        if (remoteVideo) {\n          remoteVideo.srcObject = remoteStreamRef.current;\n        }\n      }\n      event.streams[0].getTracks().forEach(track => {\n        if (!remoteStreamRef.current.getTracks().includes(track)) {\n          remoteStreamRef.current.addTrack(track);\n        }\n      });\n    };\n    pc.onconnectionstatechange = () => {\n      console.log('PeerConnection state:', pc.connectionState);\n    };\n    return pc;\n  };\n  const attachLocalTracks = pc => {\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => pc.addTrack(track, localStreamRef.current));\n    }\n  };\n  useEffect(() => {\n    if (localMediaReady.current) return;\n    localMediaReady.current = new Promise(resolve => {\n      localMediaResolve.current = resolve;\n    });\n    pcRef.current = createPeerConnection();\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localStreamRef.current = stream;\n      const localVideo = document.getElementById('localVideo');\n      if (localVideo) localVideo.srcObject = stream;\n      attachLocalTracks(pcRef.current);\n      localMediaResolve.current();\n    }).catch(err => {\n      console.error('getUserMedia error:', err);\n      localMediaResolve.current();\n    });\n    socket.emit('join');\n    socket.on('partner-found', async ({\n      partnerId: pid,\n      initiator: isInitiator\n    }) => {\n      console.log('partner-found', pid, isInitiator);\n      setPartnerId(pid);\n      partnerIdRef.current = pid;\n      setInitiator(isInitiator);\n      initiatorRef.current = isInitiator;\n      if (!pcRef.current || pcRef.current.connectionState === 'closed') {\n        pcRef.current = createPeerConnection();\n        await localMediaReady.current;\n        attachLocalTracks(pcRef.current);\n      }\n      if (isInitiator) {\n        await localMediaReady.current;\n        const offer = await pcRef.current.createOffer();\n        await pcRef.current.setLocalDescription(offer);\n        socket.emit('offer', {\n          offer,\n          partnerId: pid\n        });\n        console.log('Sent offer');\n      }\n    });\n    socket.on('offer', async ({\n      offer,\n      partnerId: fromId\n    }) => {\n      console.log('Received offer');\n      if (!pcRef.current || pcRef.current.connectionState === 'closed') {\n        pcRef.current = createPeerConnection();\n      }\n      partnerIdRef.current = fromId;\n      await localMediaReady.current;\n      await pcRef.current.setRemoteDescription(new RTCSessionDescription(offer));\n      attachLocalTracks(pcRef.current);\n      const answer = await pcRef.current.createAnswer();\n      await pcRef.current.setLocalDescription(answer);\n      socket.emit('answer', {\n        answer,\n        partnerId: fromId\n      });\n    });\n    socket.on('answer', async ({\n      answer\n    }) => {\n      console.log('Received answer');\n      if (pcRef.current) {\n        await pcRef.current.setRemoteDescription(new RTCSessionDescription(answer));\n      }\n    });\n    socket.on('ice-candidate', async ({\n      candidate\n    }) => {\n      if (pcRef.current && candidate) {\n        try {\n          await pcRef.current.addIceCandidate(new RTCIceCandidate(candidate));\n        } catch (err) {\n          console.error('Error adding ICE candidate:', err);\n        }\n      }\n    });\n    socket.on('partner-disconnected', () => {\n      console.log('Partner disconnected');\n      setPartnerId(null);\n      partnerIdRef.current = null;\n      setInitiator(false);\n      initiatorRef.current = false;\n      if (pcRef.current) {\n        pcRef.current.close();\n        pcRef.current = null;\n      }\n      remoteStreamRef.current = null;\n      socket.emit('join');\n    });\n    return () => {\n      socket.off('partner-found');\n      socket.off('offer');\n      socket.off('answer');\n      socket.off('ice-candidate');\n      socket.off('partner-disconnected');\n      if (pcRef.current) {\n        pcRef.current.close();\n        pcRef.current = null;\n      }\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(t => t.stop());\n        localStreamRef.current = null;\n      }\n      remoteStreamRef.current = null;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Omegle Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"localVideo\",\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          style: {\n            width: 320,\n            height: 240,\n            background: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Partner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"remoteVideo\",\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            width: 320,\n            height: 240,\n            background: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Partner ID: \", partnerId || 'none']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Role: \", initiator ? 'initiator' : 'waiter']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zOAXe36Wv0sKoc68NAlqw6DxaqU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","process","env","REACT_APP_BACKEND_URL","ICE_SERVERS","urls","App","_s","partnerId","setPartnerId","initiator","setInitiator","pcRef","localStreamRef","remoteStreamRef","partnerIdRef","initiatorRef","localMediaReady","localMediaResolve","createPeerConnection","pc","RTCPeerConnection","iceServers","onicecandidate","event","candidate","current","emit","ontrack","MediaStream","remoteVideo","document","getElementById","srcObject","streams","getTracks","forEach","track","includes","addTrack","onconnectionstatechange","console","log","connectionState","attachLocalTracks","Promise","resolve","navigator","mediaDevices","getUserMedia","video","audio","then","stream","localVideo","catch","err","error","on","pid","isInitiator","offer","createOffer","setLocalDescription","fromId","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addIceCandidate","RTCIceCandidate","close","off","t","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","id","autoPlay","playsInline","muted","width","height","background","marginTop","_c","$RefreshReg$"],"sources":["/Users/as/omegle-clone/client/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\n// Match backend URL\nconst socket = io(process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000');\n\n// Centralized ICE config\nconst ICE_SERVERS = [\n  { urls: 'stun:stun.l.google.com:19302' },\n  { urls: 'stun:global.stun.twilio.com:3478' }\n  // Add TURN here if needed\n];\n\nfunction App() {\n  const [partnerId, setPartnerId] = useState(null);\n  const [initiator, setInitiator] = useState(false);\n\n  const pcRef = useRef(null);\n  const localStreamRef = useRef(null);\n  const remoteStreamRef = useRef(null);\n\n  const partnerIdRef = useRef(null);\n  const initiatorRef = useRef(false);\n\n  const localMediaReady = useRef(null);\n  const localMediaResolve = useRef(null);\n\n  const createPeerConnection = () => {\n    const pc = new RTCPeerConnection({ iceServers: ICE_SERVERS });\n\n    pc.onicecandidate = (event) => {\n      if (event.candidate && partnerIdRef.current) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          partnerId: partnerIdRef.current\n        });\n      }\n    };\n\n    // Handle remote stream\n    pc.ontrack = (event) => {\n      if (!remoteStreamRef.current) {\n        remoteStreamRef.current = new MediaStream();\n        const remoteVideo = document.getElementById('remoteVideo');\n        if (remoteVideo) {\n          remoteVideo.srcObject = remoteStreamRef.current;\n        }\n      }\n      event.streams[0].getTracks().forEach(track => {\n        if (!remoteStreamRef.current.getTracks().includes(track)) {\n          remoteStreamRef.current.addTrack(track);\n        }\n      });\n    };\n\n    pc.onconnectionstatechange = () => {\n      console.log('PeerConnection state:', pc.connectionState);\n    };\n\n    return pc;\n  };\n\n  const attachLocalTracks = (pc) => {\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track =>\n        pc.addTrack(track, localStreamRef.current)\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (localMediaReady.current) return;\n\n    localMediaReady.current = new Promise((resolve) => {\n      localMediaResolve.current = resolve;\n    });\n\n    pcRef.current = createPeerConnection();\n\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        localStreamRef.current = stream;\n        const localVideo = document.getElementById('localVideo');\n        if (localVideo) localVideo.srcObject = stream;\n        attachLocalTracks(pcRef.current);\n        localMediaResolve.current();\n      })\n      .catch((err) => {\n        console.error('getUserMedia error:', err);\n        localMediaResolve.current();\n      });\n\n    socket.emit('join');\n\n    socket.on('partner-found', async ({ partnerId: pid, initiator: isInitiator }) => {\n      console.log('partner-found', pid, isInitiator);\n      setPartnerId(pid);\n      partnerIdRef.current = pid;\n      setInitiator(isInitiator);\n      initiatorRef.current = isInitiator;\n\n      if (!pcRef.current || pcRef.current.connectionState === 'closed') {\n        pcRef.current = createPeerConnection();\n        await localMediaReady.current;\n        attachLocalTracks(pcRef.current);\n      }\n\n      if (isInitiator) {\n        await localMediaReady.current;\n        const offer = await pcRef.current.createOffer();\n        await pcRef.current.setLocalDescription(offer);\n        socket.emit('offer', { offer, partnerId: pid });\n        console.log('Sent offer');\n      }\n    });\n\n    socket.on('offer', async ({ offer, partnerId: fromId }) => {\n      console.log('Received offer');\n      if (!pcRef.current || pcRef.current.connectionState === 'closed') {\n        pcRef.current = createPeerConnection();\n      }\n      partnerIdRef.current = fromId;\n      await localMediaReady.current;\n      await pcRef.current.setRemoteDescription(new RTCSessionDescription(offer));\n      attachLocalTracks(pcRef.current);\n      const answer = await pcRef.current.createAnswer();\n      await pcRef.current.setLocalDescription(answer);\n      socket.emit('answer', { answer, partnerId: fromId });\n    });\n\n    socket.on('answer', async ({ answer }) => {\n      console.log('Received answer');\n      if (pcRef.current) {\n        await pcRef.current.setRemoteDescription(new RTCSessionDescription(answer));\n      }\n    });\n\n    socket.on('ice-candidate', async ({ candidate }) => {\n      if (pcRef.current && candidate) {\n        try {\n          await pcRef.current.addIceCandidate(new RTCIceCandidate(candidate));\n        } catch (err) {\n          console.error('Error adding ICE candidate:', err);\n        }\n      }\n    });\n\n    socket.on('partner-disconnected', () => {\n      console.log('Partner disconnected');\n      setPartnerId(null);\n      partnerIdRef.current = null;\n      setInitiator(false);\n      initiatorRef.current = false;\n\n      if (pcRef.current) {\n        pcRef.current.close();\n        pcRef.current = null;\n      }\n      remoteStreamRef.current = null;\n      socket.emit('join');\n    });\n\n    return () => {\n      socket.off('partner-found');\n      socket.off('offer');\n      socket.off('answer');\n      socket.off('ice-candidate');\n      socket.off('partner-disconnected');\n\n      if (pcRef.current) {\n        pcRef.current.close();\n        pcRef.current = null;\n      }\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(t => t.stop());\n        localStreamRef.current = null;\n      }\n      remoteStreamRef.current = null;\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Omegle Clone</h1>\n      <div style={{ display: 'flex', gap: 10 }}>\n        <div>\n          <h3>You</h3>\n          <video id=\"localVideo\" autoPlay playsInline muted style={{ width: 320, height: 240, background: '#000' }} />\n        </div>\n        <div>\n          <h3>Partner</h3>\n          <video id=\"remoteVideo\" autoPlay playsInline style={{ width: 320, height: 240, background: '#000' }} />\n        </div>\n      </div>\n      <div style={{ marginTop: 12 }}>\n        <div>Partner ID: {partnerId || 'none'}</div>\n        <div>Role: {initiator ? 'initiator' : 'waiter'}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}