{"ast":null,"code":"var _jsxFileName = \"/Users/as/omegle-clone/client/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5001';\nconst socket = io(BACKEND, {\n  autoConnect: true\n});\nconst ICE_SERVERS = [{\n  urls: 'stun:stun.l.google.com:19302'\n}, {\n  urls: 'stun:global.stun.twilio.com:3478'\n} // OK without ?transport=udp\n];\nfunction App() {\n  _s();\n  const [partnerId, setPartnerId] = useState(null);\n  const [role, setRole] = useState('none'); // 'initiator' | 'waiter' | 'none'\n\n  const pcRef = useRef(null);\n  const localStreamRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const localVideoRef = useRef(null);\n  const partnerIdRef = useRef(null);\n  const isInitiatorRef = useRef(false);\n\n  // helper to create a fresh PeerConnection with handlers\n  function createPeerConnection() {\n    console.log('[pc] createPeerConnection()');\n    const pc = new RTCPeerConnection({\n      iceServers: ICE_SERVERS\n    });\n    pc.onicecandidate = event => {\n      if (event.candidate && partnerIdRef.current) {\n        console.log('[pc] sending ICE candidate to', partnerIdRef.current);\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          partnerId: partnerIdRef.current\n        });\n      }\n    };\n    pc.ontrack = event => {\n      console.log('[pc] ontrack: got streams:', event.streams.map(s => s.id));\n      // Use a dedicated MediaStream for remoteVideo to avoid mixing local/remote\n      // If remoteVideoRef already has srcObject and it's the same stream, do nothing\n      const remoteEl = remoteVideoRef.current;\n      if (!remoteEl) return;\n      const incomingStream = event.streams && event.streams[0];\n      if (!incomingStream) return;\n\n      // Avoid replacing if already same stream id\n      const current = remoteEl.srcObject;\n      if (current && current.id === incomingStream.id) {\n        console.log('[pc] remote stream same as current â€” ignoring');\n        return;\n      }\n      console.log('[pc] setting remote video srcObject to stream id', incomingStream.id);\n      remoteEl.srcObject = incomingStream;\n    };\n    pc.onconnectionstatechange = () => {\n      console.log('[pc] connectionState:', pc.connectionState);\n    };\n    pc.oniceconnectionstatechange = () => {\n      console.log('[pc] iceConnectionState:', pc.iceConnectionState);\n    };\n    return pc;\n  }\n\n  // attach local tracks (call after localStreamRef is populated and after pc created)\n  function attachLocalTracksToPc(pc) {\n    if (!pc || !localStreamRef.current) return;\n    try {\n      for (const track of localStreamRef.current.getTracks()) {\n        pc.addTrack(track, localStreamRef.current);\n      }\n      console.log('[pc] attached local tracks to pc');\n    } catch (e) {\n      console.warn('[pc] attachLocalTracks error', e);\n    }\n  }\n  useEffect(() => {\n    // socket debug\n    socket.on('connect', () => {\n      console.log('[socket] connected, id=', socket.id);\n    });\n    socket.on('connect_error', err => {\n      console.error('[socket] connect_error', err);\n    });\n\n    // get local media immediately once on mount\n    (async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        localStreamRef.current = stream;\n        if (localVideoRef.current) localVideoRef.current.srcObject = stream;\n        console.log('[media] got local stream id=', stream.id);\n      } catch (err) {\n        console.error('[media] getUserMedia failed', err);\n      }\n\n      // Now ask server to join\n      console.log('[app] emitting join');\n      socket.emit('join');\n    })();\n\n    // ----- SIGNALING HANDLERS -----\n    socket.on('partner-found', async ({\n      partnerId: pid,\n      initiator\n    }) => {\n      console.log('[signal] partner-found', pid, 'initiator=', initiator);\n      partnerIdRef.current = pid;\n      setPartnerId(pid);\n      isInitiatorRef.current = !!initiator;\n      setRole(initiator ? 'initiator' : 'waiter');\n\n      // reset remote video\n      if (remoteVideoRef.current) remoteVideoRef.current.srcObject = null;\n\n      // create a fresh pc\n      pcRef.current = createPeerConnection();\n      attachLocalTracksToPc(pcRef.current);\n\n      // If initiator -> create offer and send\n      if (initiator) {\n        try {\n          console.log('[signal] initiator creating offer');\n          const offer = await pcRef.current.createOffer();\n          await pcRef.current.setLocalDescription(offer);\n          socket.emit('offer', {\n            offer,\n            partnerId: pid\n          });\n          console.log('[signal] offer sent to', pid);\n        } catch (err) {\n          console.error('[signal] failed to create/send offer', err);\n        }\n      }\n    });\n    socket.on('offer', async ({\n      offer,\n      partnerId: fromId\n    }) => {\n      console.log('[signal] received offer from', fromId);\n      partnerIdRef.current = fromId;\n      setPartnerId(fromId);\n      isInitiatorRef.current = false;\n      setRole('waiter');\n\n      // ensure pc exists and local tracks attached\n      if (!pcRef.current) {\n        pcRef.current = createPeerConnection();\n      }\n      attachLocalTracksToPc(pcRef.current);\n      try {\n        await pcRef.current.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await pcRef.current.createAnswer();\n        await pcRef.current.setLocalDescription(answer);\n        socket.emit('answer', {\n          answer,\n          partnerId: fromId\n        });\n        console.log('[signal] answer sent to', fromId);\n      } catch (err) {\n        console.error('[signal] error handling offer', err);\n      }\n    });\n    socket.on('answer', async ({\n      answer\n    }) => {\n      console.log('[signal] received answer');\n      try {\n        if (pcRef.current) {\n          await pcRef.current.setRemoteDescription(new RTCSessionDescription(answer));\n        }\n      } catch (err) {\n        console.error('[signal] error applying answer', err);\n      }\n    });\n    socket.on('ice-candidate', async ({\n      candidate\n    }) => {\n      // candidate may be null sometimes\n      if (!candidate) return;\n      try {\n        if (pcRef.current) {\n          await pcRef.current.addIceCandidate(new RTCIceCandidate(candidate));\n          console.log('[signal] added remote ICE candidate');\n        }\n      } catch (err) {\n        console.error('[signal] failed to add ICE candidate', err);\n      }\n    });\n    socket.on('partner-disconnected', ({\n      partnerId: pid\n    }) => {\n      console.log('[signal] partner-disconnected', pid);\n      // cleanup\n      setPartnerId(null);\n      partnerIdRef.current = null;\n      isInitiatorRef.current = false;\n      setRole('none');\n      if (pcRef.current) {\n        try {\n          pcRef.current.close();\n        } catch (e) {}\n        pcRef.current = null;\n      }\n      if (remoteVideoRef.current) remoteVideoRef.current.srcObject = null;\n\n      // auto rejoin\n      console.log('[signal] rejoining queue');\n      socket.emit('join');\n    });\n\n    // cleanup on unmount\n    return () => {\n      try {\n        socket.off('partner-found');\n      } catch {}\n      try {\n        socket.off('offer');\n      } catch {}\n      try {\n        socket.off('answer');\n      } catch {}\n      try {\n        socket.off('ice-candidate');\n      } catch {}\n      try {\n        socket.off('partner-disconnected');\n      } catch {}\n      if (pcRef.current) {\n        try {\n          pcRef.current.close();\n        } catch {}\n        pcRef.current = null;\n      }\n      if (localStreamRef.current) {\n        try {\n          localStreamRef.current.getTracks().forEach(t => t.stop());\n        } catch {}\n        localStreamRef.current = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 12\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Omegle Clone (debug)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          style: {\n            width: 320,\n            height: 240,\n            background: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Partner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            width: 320,\n            height: 240,\n            background: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Socket ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 14\n        }, this), \" \", socket.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Partner ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 14\n        }, this), \" \", partnerId || 'none']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 14\n        }, this), \" \", role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Open two separate browsers (or one regular + one incognito) and allow camera/mic.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ua6bJ0QcHQKB9/wJrvzHFLML3D8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","BACKEND","process","env","REACT_APP_BACKEND_URL","socket","autoConnect","ICE_SERVERS","urls","App","_s","partnerId","setPartnerId","role","setRole","pcRef","localStreamRef","remoteVideoRef","localVideoRef","partnerIdRef","isInitiatorRef","createPeerConnection","console","log","pc","RTCPeerConnection","iceServers","onicecandidate","event","candidate","current","emit","ontrack","streams","map","s","id","remoteEl","incomingStream","srcObject","onconnectionstatechange","connectionState","oniceconnectionstatechange","iceConnectionState","attachLocalTracksToPc","track","getTracks","addTrack","e","warn","on","err","error","stream","navigator","mediaDevices","getUserMedia","video","audio","pid","initiator","offer","createOffer","setLocalDescription","fromId","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addIceCandidate","RTCIceCandidate","close","off","forEach","t","stop","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","ref","autoPlay","playsInline","muted","width","height","background","marginTop","_c","$RefreshReg$"],"sources":["/Users/as/omegle-clone/client/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst BACKEND = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5001';\nconst socket = io(BACKEND, { autoConnect: true });\n\nconst ICE_SERVERS = [\n  { urls: 'stun:stun.l.google.com:19302' },\n  { urls: 'stun:global.stun.twilio.com:3478' } // OK without ?transport=udp\n];\n\nfunction App() {\n  const [partnerId, setPartnerId] = useState(null);\n  const [role, setRole] = useState('none'); // 'initiator' | 'waiter' | 'none'\n\n  const pcRef = useRef(null);\n  const localStreamRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const localVideoRef = useRef(null);\n\n  const partnerIdRef = useRef(null);\n  const isInitiatorRef = useRef(false);\n\n  // helper to create a fresh PeerConnection with handlers\n  function createPeerConnection() {\n    console.log('[pc] createPeerConnection()');\n    const pc = new RTCPeerConnection({ iceServers: ICE_SERVERS });\n\n    pc.onicecandidate = (event) => {\n      if (event.candidate && partnerIdRef.current) {\n        console.log('[pc] sending ICE candidate to', partnerIdRef.current);\n        socket.emit('ice-candidate', { candidate: event.candidate, partnerId: partnerIdRef.current });\n      }\n    };\n\n    pc.ontrack = (event) => {\n      console.log('[pc] ontrack: got streams:', event.streams.map(s => s.id));\n      // Use a dedicated MediaStream for remoteVideo to avoid mixing local/remote\n      // If remoteVideoRef already has srcObject and it's the same stream, do nothing\n      const remoteEl = remoteVideoRef.current;\n      if (!remoteEl) return;\n      const incomingStream = event.streams && event.streams[0];\n      if (!incomingStream) return;\n\n      // Avoid replacing if already same stream id\n      const current = remoteEl.srcObject;\n      if (current && current.id === incomingStream.id) {\n        console.log('[pc] remote stream same as current â€” ignoring');\n        return;\n      }\n      console.log('[pc] setting remote video srcObject to stream id', incomingStream.id);\n      remoteEl.srcObject = incomingStream;\n    };\n\n    pc.onconnectionstatechange = () => {\n      console.log('[pc] connectionState:', pc.connectionState);\n    };\n\n    pc.oniceconnectionstatechange = () => {\n      console.log('[pc] iceConnectionState:', pc.iceConnectionState);\n    };\n\n    return pc;\n  }\n\n  // attach local tracks (call after localStreamRef is populated and after pc created)\n  function attachLocalTracksToPc(pc) {\n    if (!pc || !localStreamRef.current) return;\n    try {\n      for (const track of localStreamRef.current.getTracks()) {\n        pc.addTrack(track, localStreamRef.current);\n      }\n      console.log('[pc] attached local tracks to pc');\n    } catch (e) {\n      console.warn('[pc] attachLocalTracks error', e);\n    }\n  }\n\n  useEffect(() => {\n    // socket debug\n    socket.on('connect', () => {\n      console.log('[socket] connected, id=', socket.id);\n    });\n    socket.on('connect_error', (err) => {\n      console.error('[socket] connect_error', err);\n    });\n\n    // get local media immediately once on mount\n    (async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n        localStreamRef.current = stream;\n        if (localVideoRef.current) localVideoRef.current.srcObject = stream;\n        console.log('[media] got local stream id=', stream.id);\n      } catch (err) {\n        console.error('[media] getUserMedia failed', err);\n      }\n\n      // Now ask server to join\n      console.log('[app] emitting join');\n      socket.emit('join');\n    })();\n\n    // ----- SIGNALING HANDLERS -----\n    socket.on('partner-found', async ({ partnerId: pid, initiator }) => {\n      console.log('[signal] partner-found', pid, 'initiator=', initiator);\n      partnerIdRef.current = pid;\n      setPartnerId(pid);\n      isInitiatorRef.current = !!initiator;\n      setRole(initiator ? 'initiator' : 'waiter');\n\n      // reset remote video\n      if (remoteVideoRef.current) remoteVideoRef.current.srcObject = null;\n\n      // create a fresh pc\n      pcRef.current = createPeerConnection();\n      attachLocalTracksToPc(pcRef.current);\n\n      // If initiator -> create offer and send\n      if (initiator) {\n        try {\n          console.log('[signal] initiator creating offer');\n          const offer = await pcRef.current.createOffer();\n          await pcRef.current.setLocalDescription(offer);\n          socket.emit('offer', { offer, partnerId: pid });\n          console.log('[signal] offer sent to', pid);\n        } catch (err) {\n          console.error('[signal] failed to create/send offer', err);\n        }\n      }\n    });\n\n    socket.on('offer', async ({ offer, partnerId: fromId }) => {\n      console.log('[signal] received offer from', fromId);\n      partnerIdRef.current = fromId;\n      setPartnerId(fromId);\n      isInitiatorRef.current = false;\n      setRole('waiter');\n\n      // ensure pc exists and local tracks attached\n      if (!pcRef.current) {\n        pcRef.current = createPeerConnection();\n      }\n      attachLocalTracksToPc(pcRef.current);\n\n      try {\n        await pcRef.current.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await pcRef.current.createAnswer();\n        await pcRef.current.setLocalDescription(answer);\n        socket.emit('answer', { answer, partnerId: fromId });\n        console.log('[signal] answer sent to', fromId);\n      } catch (err) {\n        console.error('[signal] error handling offer', err);\n      }\n    });\n\n    socket.on('answer', async ({ answer }) => {\n      console.log('[signal] received answer');\n      try {\n        if (pcRef.current) {\n          await pcRef.current.setRemoteDescription(new RTCSessionDescription(answer));\n        }\n      } catch (err) {\n        console.error('[signal] error applying answer', err);\n      }\n    });\n\n    socket.on('ice-candidate', async ({ candidate }) => {\n      // candidate may be null sometimes\n      if (!candidate) return;\n      try {\n        if (pcRef.current) {\n          await pcRef.current.addIceCandidate(new RTCIceCandidate(candidate));\n          console.log('[signal] added remote ICE candidate');\n        }\n      } catch (err) {\n        console.error('[signal] failed to add ICE candidate', err);\n      }\n    });\n\n    socket.on('partner-disconnected', ({ partnerId: pid }) => {\n      console.log('[signal] partner-disconnected', pid);\n      // cleanup\n      setPartnerId(null);\n      partnerIdRef.current = null;\n      isInitiatorRef.current = false;\n      setRole('none');\n\n      if (pcRef.current) {\n        try { pcRef.current.close(); } catch (e) {}\n        pcRef.current = null;\n      }\n      if (remoteVideoRef.current) remoteVideoRef.current.srcObject = null;\n\n      // auto rejoin\n      console.log('[signal] rejoining queue');\n      socket.emit('join');\n    });\n\n    // cleanup on unmount\n    return () => {\n      try { socket.off('partner-found'); } catch {}\n      try { socket.off('offer'); } catch {}\n      try { socket.off('answer'); } catch {}\n      try { socket.off('ice-candidate'); } catch {}\n      try { socket.off('partner-disconnected'); } catch {}\n      if (pcRef.current) {\n        try { pcRef.current.close(); } catch {}\n        pcRef.current = null;\n      }\n      if (localStreamRef.current) {\n        try { localStreamRef.current.getTracks().forEach(t => t.stop()); } catch {}\n        localStreamRef.current = null;\n      }\n    };\n  }, []);\n\n  return (\n    <div style={{ padding: 12 }}>\n      <h2>Omegle Clone (debug)</h2>\n      <div style={{ display: 'flex', gap: 12 }}>\n        <div>\n          <h4>You</h4>\n          <video ref={localVideoRef} autoPlay playsInline muted style={{ width: 320, height: 240, background: '#000' }} />\n        </div>\n        <div>\n          <h4>Partner</h4>\n          <video ref={remoteVideoRef} autoPlay playsInline style={{ width: 320, height: 240, background: '#000' }} />\n        </div>\n      </div>\n\n      <div style={{ marginTop: 12 }}>\n        <div><strong>Socket ID:</strong> {socket.id}</div>\n        <div><strong>Partner ID:</strong> {partnerId || 'none'}</div>\n        <div><strong>Role:</strong> {role}</div>\n      </div>\n\n      <div style={{ marginTop: 8 }}>\n        <small>Open two separate browsers (or one regular + one incognito) and allow camera/mic.</small>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,uBAAuB;AAC5E,MAAMC,MAAM,GAAGP,EAAE,CAACG,OAAO,EAAE;EAAEK,WAAW,EAAE;AAAK,CAAC,CAAC;AAEjD,MAAMC,WAAW,GAAG,CAClB;EAAEC,IAAI,EAAE;AAA+B,CAAC,EACxC;EAAEA,IAAI,EAAE;AAAmC,CAAC,CAAC;AAAA,CAC9C;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE1C,MAAMkB,KAAK,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAMoB,cAAc,GAAGpB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMqB,cAAc,GAAGrB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMsB,aAAa,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAElC,MAAMuB,YAAY,GAAGvB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMwB,cAAc,GAAGxB,MAAM,CAAC,KAAK,CAAC;;EAEpC;EACA,SAASyB,oBAAoBA,CAAA,EAAG;IAC9BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,MAAMC,EAAE,GAAG,IAAIC,iBAAiB,CAAC;MAAEC,UAAU,EAAEnB;IAAY,CAAC,CAAC;IAE7DiB,EAAE,CAACG,cAAc,GAAIC,KAAK,IAAK;MAC7B,IAAIA,KAAK,CAACC,SAAS,IAAIV,YAAY,CAACW,OAAO,EAAE;QAC3CR,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEJ,YAAY,CAACW,OAAO,CAAC;QAClEzB,MAAM,CAAC0B,IAAI,CAAC,eAAe,EAAE;UAAEF,SAAS,EAAED,KAAK,CAACC,SAAS;UAAElB,SAAS,EAAEQ,YAAY,CAACW;QAAQ,CAAC,CAAC;MAC/F;IACF,CAAC;IAEDN,EAAE,CAACQ,OAAO,GAAIJ,KAAK,IAAK;MACtBN,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEK,KAAK,CAACK,OAAO,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC,CAAC;MACvE;MACA;MACA,MAAMC,QAAQ,GAAGpB,cAAc,CAACa,OAAO;MACvC,IAAI,CAACO,QAAQ,EAAE;MACf,MAAMC,cAAc,GAAGV,KAAK,CAACK,OAAO,IAAIL,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;MACxD,IAAI,CAACK,cAAc,EAAE;;MAErB;MACA,MAAMR,OAAO,GAAGO,QAAQ,CAACE,SAAS;MAClC,IAAIT,OAAO,IAAIA,OAAO,CAACM,EAAE,KAAKE,cAAc,CAACF,EAAE,EAAE;QAC/Cd,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;QAC5D;MACF;MACAD,OAAO,CAACC,GAAG,CAAC,kDAAkD,EAAEe,cAAc,CAACF,EAAE,CAAC;MAClFC,QAAQ,CAACE,SAAS,GAAGD,cAAc;IACrC,CAAC;IAEDd,EAAE,CAACgB,uBAAuB,GAAG,MAAM;MACjClB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,EAAE,CAACiB,eAAe,CAAC;IAC1D,CAAC;IAEDjB,EAAE,CAACkB,0BAA0B,GAAG,MAAM;MACpCpB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,EAAE,CAACmB,kBAAkB,CAAC;IAChE,CAAC;IAED,OAAOnB,EAAE;EACX;;EAEA;EACA,SAASoB,qBAAqBA,CAACpB,EAAE,EAAE;IACjC,IAAI,CAACA,EAAE,IAAI,CAACR,cAAc,CAACc,OAAO,EAAE;IACpC,IAAI;MACF,KAAK,MAAMe,KAAK,IAAI7B,cAAc,CAACc,OAAO,CAACgB,SAAS,CAAC,CAAC,EAAE;QACtDtB,EAAE,CAACuB,QAAQ,CAACF,KAAK,EAAE7B,cAAc,CAACc,OAAO,CAAC;MAC5C;MACAR,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC,CAAC,OAAOyB,CAAC,EAAE;MACV1B,OAAO,CAAC2B,IAAI,CAAC,8BAA8B,EAAED,CAAC,CAAC;IACjD;EACF;EAEArD,SAAS,CAAC,MAAM;IACd;IACAU,MAAM,CAAC6C,EAAE,CAAC,SAAS,EAAE,MAAM;MACzB5B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAElB,MAAM,CAAC+B,EAAE,CAAC;IACnD,CAAC,CAAC;IACF/B,MAAM,CAAC6C,EAAE,CAAC,eAAe,EAAGC,GAAG,IAAK;MAClC7B,OAAO,CAAC8B,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;IAC9C,CAAC,CAAC;;IAEF;IACA,CAAC,YAAY;MACX,IAAI;QACF,MAAME,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACtF1C,cAAc,CAACc,OAAO,GAAGuB,MAAM;QAC/B,IAAInC,aAAa,CAACY,OAAO,EAAEZ,aAAa,CAACY,OAAO,CAACS,SAAS,GAAGc,MAAM;QACnE/B,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE8B,MAAM,CAACjB,EAAE,CAAC;MACxD,CAAC,CAAC,OAAOe,GAAG,EAAE;QACZ7B,OAAO,CAAC8B,KAAK,CAAC,6BAA6B,EAAED,GAAG,CAAC;MACnD;;MAEA;MACA7B,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClClB,MAAM,CAAC0B,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC,EAAE,CAAC;;IAEJ;IACA1B,MAAM,CAAC6C,EAAE,CAAC,eAAe,EAAE,OAAO;MAAEvC,SAAS,EAAEgD,GAAG;MAAEC;IAAU,CAAC,KAAK;MAClEtC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEoC,GAAG,EAAE,YAAY,EAAEC,SAAS,CAAC;MACnEzC,YAAY,CAACW,OAAO,GAAG6B,GAAG;MAC1B/C,YAAY,CAAC+C,GAAG,CAAC;MACjBvC,cAAc,CAACU,OAAO,GAAG,CAAC,CAAC8B,SAAS;MACpC9C,OAAO,CAAC8C,SAAS,GAAG,WAAW,GAAG,QAAQ,CAAC;;MAE3C;MACA,IAAI3C,cAAc,CAACa,OAAO,EAAEb,cAAc,CAACa,OAAO,CAACS,SAAS,GAAG,IAAI;;MAEnE;MACAxB,KAAK,CAACe,OAAO,GAAGT,oBAAoB,CAAC,CAAC;MACtCuB,qBAAqB,CAAC7B,KAAK,CAACe,OAAO,CAAC;;MAEpC;MACA,IAAI8B,SAAS,EAAE;QACb,IAAI;UACFtC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAChD,MAAMsC,KAAK,GAAG,MAAM9C,KAAK,CAACe,OAAO,CAACgC,WAAW,CAAC,CAAC;UAC/C,MAAM/C,KAAK,CAACe,OAAO,CAACiC,mBAAmB,CAACF,KAAK,CAAC;UAC9CxD,MAAM,CAAC0B,IAAI,CAAC,OAAO,EAAE;YAAE8B,KAAK;YAAElD,SAAS,EAAEgD;UAAI,CAAC,CAAC;UAC/CrC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEoC,GAAG,CAAC;QAC5C,CAAC,CAAC,OAAOR,GAAG,EAAE;UACZ7B,OAAO,CAAC8B,KAAK,CAAC,sCAAsC,EAAED,GAAG,CAAC;QAC5D;MACF;IACF,CAAC,CAAC;IAEF9C,MAAM,CAAC6C,EAAE,CAAC,OAAO,EAAE,OAAO;MAAEW,KAAK;MAAElD,SAAS,EAAEqD;IAAO,CAAC,KAAK;MACzD1C,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEyC,MAAM,CAAC;MACnD7C,YAAY,CAACW,OAAO,GAAGkC,MAAM;MAC7BpD,YAAY,CAACoD,MAAM,CAAC;MACpB5C,cAAc,CAACU,OAAO,GAAG,KAAK;MAC9BhB,OAAO,CAAC,QAAQ,CAAC;;MAEjB;MACA,IAAI,CAACC,KAAK,CAACe,OAAO,EAAE;QAClBf,KAAK,CAACe,OAAO,GAAGT,oBAAoB,CAAC,CAAC;MACxC;MACAuB,qBAAqB,CAAC7B,KAAK,CAACe,OAAO,CAAC;MAEpC,IAAI;QACF,MAAMf,KAAK,CAACe,OAAO,CAACmC,oBAAoB,CAAC,IAAIC,qBAAqB,CAACL,KAAK,CAAC,CAAC;QAC1E,MAAMM,MAAM,GAAG,MAAMpD,KAAK,CAACe,OAAO,CAACsC,YAAY,CAAC,CAAC;QACjD,MAAMrD,KAAK,CAACe,OAAO,CAACiC,mBAAmB,CAACI,MAAM,CAAC;QAC/C9D,MAAM,CAAC0B,IAAI,CAAC,QAAQ,EAAE;UAAEoC,MAAM;UAAExD,SAAS,EAAEqD;QAAO,CAAC,CAAC;QACpD1C,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEyC,MAAM,CAAC;MAChD,CAAC,CAAC,OAAOb,GAAG,EAAE;QACZ7B,OAAO,CAAC8B,KAAK,CAAC,+BAA+B,EAAED,GAAG,CAAC;MACrD;IACF,CAAC,CAAC;IAEF9C,MAAM,CAAC6C,EAAE,CAAC,QAAQ,EAAE,OAAO;MAAEiB;IAAO,CAAC,KAAK;MACxC7C,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,IAAI;QACF,IAAIR,KAAK,CAACe,OAAO,EAAE;UACjB,MAAMf,KAAK,CAACe,OAAO,CAACmC,oBAAoB,CAAC,IAAIC,qBAAqB,CAACC,MAAM,CAAC,CAAC;QAC7E;MACF,CAAC,CAAC,OAAOhB,GAAG,EAAE;QACZ7B,OAAO,CAAC8B,KAAK,CAAC,gCAAgC,EAAED,GAAG,CAAC;MACtD;IACF,CAAC,CAAC;IAEF9C,MAAM,CAAC6C,EAAE,CAAC,eAAe,EAAE,OAAO;MAAErB;IAAU,CAAC,KAAK;MAClD;MACA,IAAI,CAACA,SAAS,EAAE;MAChB,IAAI;QACF,IAAId,KAAK,CAACe,OAAO,EAAE;UACjB,MAAMf,KAAK,CAACe,OAAO,CAACuC,eAAe,CAAC,IAAIC,eAAe,CAACzC,SAAS,CAAC,CAAC;UACnEP,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;QACpD;MACF,CAAC,CAAC,OAAO4B,GAAG,EAAE;QACZ7B,OAAO,CAAC8B,KAAK,CAAC,sCAAsC,EAAED,GAAG,CAAC;MAC5D;IACF,CAAC,CAAC;IAEF9C,MAAM,CAAC6C,EAAE,CAAC,sBAAsB,EAAE,CAAC;MAAEvC,SAAS,EAAEgD;IAAI,CAAC,KAAK;MACxDrC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEoC,GAAG,CAAC;MACjD;MACA/C,YAAY,CAAC,IAAI,CAAC;MAClBO,YAAY,CAACW,OAAO,GAAG,IAAI;MAC3BV,cAAc,CAACU,OAAO,GAAG,KAAK;MAC9BhB,OAAO,CAAC,MAAM,CAAC;MAEf,IAAIC,KAAK,CAACe,OAAO,EAAE;QACjB,IAAI;UAAEf,KAAK,CAACe,OAAO,CAACyC,KAAK,CAAC,CAAC;QAAE,CAAC,CAAC,OAAOvB,CAAC,EAAE,CAAC;QAC1CjC,KAAK,CAACe,OAAO,GAAG,IAAI;MACtB;MACA,IAAIb,cAAc,CAACa,OAAO,EAAEb,cAAc,CAACa,OAAO,CAACS,SAAS,GAAG,IAAI;;MAEnE;MACAjB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvClB,MAAM,CAAC0B,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACX,IAAI;QAAE1B,MAAM,CAACmE,GAAG,CAAC,eAAe,CAAC;MAAE,CAAC,CAAC,MAAM,CAAC;MAC5C,IAAI;QAAEnE,MAAM,CAACmE,GAAG,CAAC,OAAO,CAAC;MAAE,CAAC,CAAC,MAAM,CAAC;MACpC,IAAI;QAAEnE,MAAM,CAACmE,GAAG,CAAC,QAAQ,CAAC;MAAE,CAAC,CAAC,MAAM,CAAC;MACrC,IAAI;QAAEnE,MAAM,CAACmE,GAAG,CAAC,eAAe,CAAC;MAAE,CAAC,CAAC,MAAM,CAAC;MAC5C,IAAI;QAAEnE,MAAM,CAACmE,GAAG,CAAC,sBAAsB,CAAC;MAAE,CAAC,CAAC,MAAM,CAAC;MACnD,IAAIzD,KAAK,CAACe,OAAO,EAAE;QACjB,IAAI;UAAEf,KAAK,CAACe,OAAO,CAACyC,KAAK,CAAC,CAAC;QAAE,CAAC,CAAC,MAAM,CAAC;QACtCxD,KAAK,CAACe,OAAO,GAAG,IAAI;MACtB;MACA,IAAId,cAAc,CAACc,OAAO,EAAE;QAC1B,IAAI;UAAEd,cAAc,CAACc,OAAO,CAACgB,SAAS,CAAC,CAAC,CAAC2B,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;QAAE,CAAC,CAAC,MAAM,CAAC;QAC1E3D,cAAc,CAACc,OAAO,GAAG,IAAI;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE9B,OAAA;IAAK4E,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1B9E,OAAA;MAAA8E,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BlF,OAAA;MAAK4E,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAG,CAAE;MAAAN,QAAA,gBACvC9E,OAAA;QAAA8E,QAAA,gBACE9E,OAAA;UAAA8E,QAAA,EAAI;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACZlF,OAAA;UAAOqF,GAAG,EAAEnE,aAAc;UAACoE,QAAQ;UAACC,WAAW;UAACC,KAAK;UAACZ,KAAK,EAAE;YAAEa,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE,GAAG;YAAEC,UAAU,EAAE;UAAO;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7G,CAAC,eACNlF,OAAA;QAAA8E,QAAA,gBACE9E,OAAA;UAAA8E,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBlF,OAAA;UAAOqF,GAAG,EAAEpE,cAAe;UAACqE,QAAQ;UAACC,WAAW;UAACX,KAAK,EAAE;YAAEa,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE,GAAG;YAAEC,UAAU,EAAE;UAAO;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENlF,OAAA;MAAK4E,KAAK,EAAE;QAAEgB,SAAS,EAAE;MAAG,CAAE;MAAAd,QAAA,gBAC5B9E,OAAA;QAAA8E,QAAA,gBAAK9E,OAAA;UAAA8E,QAAA,EAAQ;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC7E,MAAM,CAAC+B,EAAE;MAAA;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClDlF,OAAA;QAAA8E,QAAA,gBAAK9E,OAAA;UAAA8E,QAAA,EAAQ;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACvE,SAAS,IAAI,MAAM;MAAA;QAAAoE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7DlF,OAAA;QAAA8E,QAAA,gBAAK9E,OAAA;UAAA8E,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACrE,IAAI;MAAA;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAENlF,OAAA;MAAK4E,KAAK,EAAE;QAAEgB,SAAS,EAAE;MAAE,CAAE;MAAAd,QAAA,eAC3B9E,OAAA;QAAA8E,QAAA,EAAO;MAAiF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxE,EAAA,CAvOQD,GAAG;AAAAoF,EAAA,GAAHpF,GAAG;AAyOZ,eAAeA,GAAG;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}