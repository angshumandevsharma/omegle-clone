{"ast":null,"code":"var _jsxFileName = \"/Users/as/omegle-clone/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // backend URL\n\n// ✅ Centralized ICE configuration\nconst ICE_SERVERS = [{\n  urls: 'stun:stun.l.google.com:19302'\n}, {\n  urls: 'stun:global.stun.twilio.com:3478'\n}\n// Uncomment and configure TURN if needed for NAT traversal:\n// {\n//   urls: 'turn:your-turn-server.com:3478',\n//   username: 'your-username',\n//   credential: 'your-password'\n// }\n];\nfunction App() {\n  _s();\n  const [partnerId, setPartnerId] = useState(null);\n  const [initiator, setInitiator] = useState(false);\n  const initiatorRef = useRef(false);\n  const partnerIdRef = useRef(null);\n  const peerConnection = useRef(null);\n  const localStreamRef = useRef(null);\n  const localMediaReadyPromise = useRef(null);\n  const localMediaReadyResolver = useRef(null);\n  const hasInitializedRef = useRef(false);\n  useEffect(() => {\n    if (hasInitializedRef.current) return;\n    hasInitializedRef.current = true;\n    console.log(\"🚀 Connecting to backend...\");\n\n    // Setup promise for local media readiness\n    localMediaReadyPromise.current = new Promise(resolve => {\n      localMediaReadyResolver.current = resolve;\n    });\n\n    // ✅ Use centralized ICE config\n    peerConnection.current = new RTCPeerConnection({\n      iceServers: ICE_SERVERS\n    });\n    peerConnection.current.onconnectionstatechange = () => {\n      console.log('PC connection state:', peerConnection.current.connectionState);\n    };\n    peerConnection.current.onicecandidate = event => {\n      const currentPartnerId = partnerIdRef.current;\n      if (event.candidate && currentPartnerId) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          partnerId: currentPartnerId\n        });\n      }\n    };\n    peerConnection.current.ontrack = event => {\n      const remoteVideo = document.getElementById('remoteVideo');\n      if (remoteVideo) {\n        remoteVideo.srcObject = event.streams[0];\n      }\n    };\n    peerConnection.current.onnegotiationneeded = async () => {\n      try {\n        if (initiatorRef.current && partnerIdRef.current) {\n          await localMediaReadyPromise.current;\n          const offer = await peerConnection.current.createOffer();\n          await peerConnection.current.setLocalDescription(offer);\n          socket.emit('offer', {\n            offer,\n            partnerId: partnerIdRef.current\n          });\n        }\n      } catch (err) {\n        console.error('Negotiationneeded offer failed:', err);\n      }\n    };\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localStreamRef.current = stream;\n      const localVideo = document.getElementById('localVideo');\n      if (localVideo) localVideo.srcObject = stream;\n      stream.getTracks().forEach(track => peerConnection.current.addTrack(track, stream));\n      localMediaReadyResolver.current();\n    }).catch(err => {\n      console.error('getUserMedia failed:', err);\n      localMediaReadyResolver.current();\n    });\n    socket.emit('join');\n    const onPartnerFound = async ({\n      partnerId,\n      initiator\n    }) => {\n      console.log('🤝 Partner found:', partnerId, 'initiator:', initiator);\n      setPartnerId(partnerId);\n      partnerIdRef.current = partnerId;\n      setInitiator(initiator);\n      initiatorRef.current = initiator;\n      if (initiator) {\n        try {\n          await localMediaReadyPromise.current;\n          const offer = await peerConnection.current.createOffer();\n          await peerConnection.current.setLocalDescription(offer);\n          socket.emit('offer', {\n            offer,\n            partnerId\n          });\n        } catch (err) {\n          console.error('Offer creation failed:', err);\n        }\n      }\n    };\n    const onOffer = async ({\n      offer,\n      partnerId\n    }) => {\n      try {\n        await localMediaReadyPromise.current;\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await peerConnection.current.createAnswer();\n        await peerConnection.current.setLocalDescription(answer);\n        socket.emit('answer', {\n          answer,\n          partnerId\n        });\n      } catch (err) {\n        console.error('Answer creation failed:', err);\n      }\n    };\n    const onAnswer = async ({\n      answer\n    }) => {\n      try {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(answer));\n      } catch (err) {\n        console.error('Setting remote description from answer failed:', err);\n      }\n    };\n    const onIceCandidate = async ({\n      candidate\n    }) => {\n      try {\n        await peerConnection.current.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (err) {\n        console.error('Adding ICE candidate failed:', err);\n      }\n    };\n    const onPartnerDisconnected = () => {\n      console.log(\"💔 Partner disconnected\");\n      setPartnerId(null);\n      partnerIdRef.current = null;\n      initiatorRef.current = false;\n      if (peerConnection.current) {\n        try {\n          peerConnection.current.close();\n        } catch {}\n      }\n\n      // ✅ Reinitialize with same ICE config\n      peerConnection.current = new RTCPeerConnection({\n        iceServers: ICE_SERVERS\n      });\n\n      // Restart matchmaking\n      socket.emit('join');\n    };\n    socket.on('partner-found', onPartnerFound);\n    socket.on('offer', onOffer);\n    socket.on('answer', onAnswer);\n    socket.on('ice-candidate', onIceCandidate);\n    socket.on('partner-disconnected', onPartnerDisconnected);\n    return () => {\n      socket.off('partner-found', onPartnerFound);\n      socket.off('offer', onOffer);\n      socket.off('answer', onAnswer);\n      socket.off('ice-candidate', onIceCandidate);\n      socket.off('partner-disconnected', onPartnerDisconnected);\n      if (peerConnection.current) {\n        try {\n          peerConnection.current.close();\n        } catch {}\n      }\n      if (localStreamRef.current) {\n        try {\n          localStreamRef.current.getTracks().forEach(t => t.stop());\n        } catch {}\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Omegle Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"localVideo\",\n      autoPlay: true,\n      playsInline: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"remoteVideo\",\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7E11YE9wYqzj1i9L+fcRWbj/E4Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","ICE_SERVERS","urls","App","_s","partnerId","setPartnerId","initiator","setInitiator","initiatorRef","partnerIdRef","peerConnection","localStreamRef","localMediaReadyPromise","localMediaReadyResolver","hasInitializedRef","current","console","log","Promise","resolve","RTCPeerConnection","iceServers","onconnectionstatechange","connectionState","onicecandidate","event","currentPartnerId","candidate","emit","ontrack","remoteVideo","document","getElementById","srcObject","streams","onnegotiationneeded","offer","createOffer","setLocalDescription","err","error","navigator","mediaDevices","getUserMedia","video","audio","then","stream","localVideo","getTracks","forEach","track","addTrack","catch","onPartnerFound","onOffer","setRemoteDescription","RTCSessionDescription","answer","createAnswer","onAnswer","onIceCandidate","addIceCandidate","RTCIceCandidate","onPartnerDisconnected","close","on","off","t","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","id","autoPlay","playsInline","muted","_c","$RefreshReg$"],"sources":["/Users/as/omegle-clone/client/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:5000'); // backend URL\n\n// ✅ Centralized ICE configuration\nconst ICE_SERVERS = [\n  { urls: 'stun:stun.l.google.com:19302' },\n  { urls: 'stun:global.stun.twilio.com:3478' },\n  // Uncomment and configure TURN if needed for NAT traversal:\n  // {\n  //   urls: 'turn:your-turn-server.com:3478',\n  //   username: 'your-username',\n  //   credential: 'your-password'\n  // }\n];\n\nfunction App() {\n  const [partnerId, setPartnerId] = useState(null);\n  const [initiator, setInitiator] = useState(false);\n\n  const initiatorRef = useRef(false);\n  const partnerIdRef = useRef(null);\n  const peerConnection = useRef(null);\n  const localStreamRef = useRef(null);\n\n  const localMediaReadyPromise = useRef(null);\n  const localMediaReadyResolver = useRef(null);\n\n  const hasInitializedRef = useRef(false);\n\n  useEffect(() => {\n    if (hasInitializedRef.current) return;\n    hasInitializedRef.current = true;\n\n    console.log(\"🚀 Connecting to backend...\");\n\n    // Setup promise for local media readiness\n    localMediaReadyPromise.current = new Promise((resolve) => {\n      localMediaReadyResolver.current = resolve;\n    });\n\n    // ✅ Use centralized ICE config\n    peerConnection.current = new RTCPeerConnection({ iceServers: ICE_SERVERS });\n\n    peerConnection.current.onconnectionstatechange = () => {\n      console.log('PC connection state:', peerConnection.current.connectionState);\n    };\n\n    peerConnection.current.onicecandidate = (event) => {\n      const currentPartnerId = partnerIdRef.current;\n      if (event.candidate && currentPartnerId) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          partnerId: currentPartnerId\n        });\n      }\n    };\n\n    peerConnection.current.ontrack = (event) => {\n      const remoteVideo = document.getElementById('remoteVideo');\n      if (remoteVideo) {\n        remoteVideo.srcObject = event.streams[0];\n      }\n    };\n\n    peerConnection.current.onnegotiationneeded = async () => {\n      try {\n        if (initiatorRef.current && partnerIdRef.current) {\n          await localMediaReadyPromise.current;\n          const offer = await peerConnection.current.createOffer();\n          await peerConnection.current.setLocalDescription(offer);\n          socket.emit('offer', { offer, partnerId: partnerIdRef.current });\n        }\n      } catch (err) {\n        console.error('Negotiationneeded offer failed:', err);\n      }\n    };\n\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        localStreamRef.current = stream;\n        const localVideo = document.getElementById('localVideo');\n        if (localVideo) localVideo.srcObject = stream;\n        stream.getTracks().forEach(track =>\n          peerConnection.current.addTrack(track, stream)\n        );\n        localMediaReadyResolver.current();\n      })\n      .catch((err) => {\n        console.error('getUserMedia failed:', err);\n        localMediaReadyResolver.current();\n      });\n\n    socket.emit('join');\n\n    const onPartnerFound = async ({ partnerId, initiator }) => {\n      console.log('🤝 Partner found:', partnerId, 'initiator:', initiator);\n      setPartnerId(partnerId);\n      partnerIdRef.current = partnerId;\n      setInitiator(initiator);\n      initiatorRef.current = initiator;\n\n      if (initiator) {\n        try {\n          await localMediaReadyPromise.current;\n          const offer = await peerConnection.current.createOffer();\n          await peerConnection.current.setLocalDescription(offer);\n          socket.emit('offer', { offer, partnerId });\n        } catch (err) {\n          console.error('Offer creation failed:', err);\n        }\n      }\n    };\n\n    const onOffer = async ({ offer, partnerId }) => {\n      try {\n        await localMediaReadyPromise.current;\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await peerConnection.current.createAnswer();\n        await peerConnection.current.setLocalDescription(answer);\n        socket.emit('answer', { answer, partnerId });\n      } catch (err) {\n        console.error('Answer creation failed:', err);\n      }\n    };\n\n    const onAnswer = async ({ answer }) => {\n      try {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(answer));\n      } catch (err) {\n        console.error('Setting remote description from answer failed:', err);\n      }\n    };\n\n    const onIceCandidate = async ({ candidate }) => {\n      try {\n        await peerConnection.current.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (err) {\n        console.error('Adding ICE candidate failed:', err);\n      }\n    };\n\n    const onPartnerDisconnected = () => {\n      console.log(\"💔 Partner disconnected\");\n      setPartnerId(null);\n      partnerIdRef.current = null;\n      initiatorRef.current = false;\n\n      if (peerConnection.current) {\n        try { peerConnection.current.close(); } catch {}\n      }\n\n      // ✅ Reinitialize with same ICE config\n      peerConnection.current = new RTCPeerConnection({ iceServers: ICE_SERVERS });\n\n      // Restart matchmaking\n      socket.emit('join');\n    };\n\n    socket.on('partner-found', onPartnerFound);\n    socket.on('offer', onOffer);\n    socket.on('answer', onAnswer);\n    socket.on('ice-candidate', onIceCandidate);\n    socket.on('partner-disconnected', onPartnerDisconnected);\n\n    return () => {\n      socket.off('partner-found', onPartnerFound);\n      socket.off('offer', onOffer);\n      socket.off('answer', onAnswer);\n      socket.off('ice-candidate', onIceCandidate);\n      socket.off('partner-disconnected', onPartnerDisconnected);\n      if (peerConnection.current) {\n        try { peerConnection.current.close(); } catch {}\n      }\n      if (localStreamRef.current) {\n        try { localStreamRef.current.getTracks().forEach(t => t.stop()); } catch {}\n      }\n    };\n\n  }, []);\n\n  return (\n    <div>\n      <h1>Omegle Clone</h1>\n      <video id=\"localVideo\" autoPlay playsInline muted></video>\n      <video id=\"remoteVideo\" autoPlay playsInline></video>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}