{"ast":null,"code":"var _jsxFileName = \"/Users/as/omegle-clone/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction App() {\n  _s();\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const [stream, setStream] = useState(null);\n  const [hasConnected, setHasConnected] = useState(false);\n  const [peer, setPeer] = useState(null);\n  useEffect(() => {\n    console.log(\"🚀 Connecting to backend...\");\n\n    // Get user's media stream first\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      console.log(\"✅ Got local stream\");\n      setStream(currentStream);\n      if (myVideo.current) {\n        myVideo.current.srcObject = currentStream;\n      }\n\n      // Wait until stream is set before listening for socket events\n      socket.on(\"connect\", () => {\n        console.log(\"🧠 Socket connected:\", socket.id);\n        if (!hasConnected) {\n          setupSocketEvents(currentStream);\n          setHasConnected(true);\n        }\n      });\n    }).catch(err => {\n      console.error(\"❌ Error getting user media:\", err);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const setupSocketEvents = currentStream => {\n    socket.on(\"partner\", partnerId => {\n      console.log(\"👥 Matched with partner:\", partnerId);\n      const newPeer = new Peer({\n        initiator: true,\n        trickle: false,\n        stream: currentStream\n      });\n      newPeer.on(\"signal\", data => {\n        console.log(\"📤 Sending signal to partner\");\n        socket.emit(\"signal\", {\n          to: partnerId,\n          data\n        });\n      });\n      newPeer.on(\"stream\", partnerStream => {\n        console.log(\"📥 Received stream from partner\");\n        if (userVideo.current) {\n          userVideo.current.srcObject = partnerStream;\n        }\n      });\n      socket.on(\"signal\", ({\n        data\n      }) => {\n        console.log(\"📩 Signal received by initiator\");\n        newPeer.signal(data);\n      });\n      setPeer(newPeer);\n    });\n    socket.on(\"signal\", ({\n      from,\n      data\n    }) => {\n      console.log(\"📩 Signal received by receiver:\", from);\n      const newPeer = new Peer({\n        initiator: false,\n        trickle: false,\n        stream: currentStream\n      });\n      newPeer.on(\"signal\", signalData => {\n        console.log(\"📤 Responding to signal from initiator\");\n        socket.emit(\"signal\", {\n          to: from,\n          data: signalData\n        });\n      });\n      newPeer.on(\"stream\", partnerStream => {\n        console.log(\"📥 Received stream from initiator\");\n        if (userVideo.current) {\n          userVideo.current.srcObject = partnerStream;\n        }\n      });\n      newPeer.signal(data);\n      setPeer(newPeer);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Omegle Clone \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        gap: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: myVideo,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          style: {\n            width: \"300px\",\n            border: \"1px solid black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Stranger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            width: \"300px\",\n            border: \"1px solid black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"28XlN1XF7Fv97JRk7EYbico1JYY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","io","Peer","jsxDEV","_jsxDEV","socket","App","_s","myVideo","userVideo","stream","setStream","hasConnected","setHasConnected","peer","setPeer","console","log","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","setupSocketEvents","catch","err","error","disconnect","partnerId","newPeer","initiator","trickle","data","emit","to","partnerStream","signal","from","signalData","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","ref","autoPlay","playsInline","muted","width","border","_c","$RefreshReg$"],"sources":["/Users/as/omegle-clone/client/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\n\nconst socket = io(\"http://localhost:5000\");\n\nfunction App() {\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const [stream, setStream] = useState(null);\n  const [hasConnected, setHasConnected] = useState(false);\n  const [peer, setPeer] = useState(null);\n\n  useEffect(() => {\n    console.log(\"🚀 Connecting to backend...\");\n\n    // Get user's media stream first\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(currentStream => {\n      console.log(\"✅ Got local stream\");\n      setStream(currentStream);\n      if (myVideo.current) {\n        myVideo.current.srcObject = currentStream;\n      }\n\n      // Wait until stream is set before listening for socket events\n      socket.on(\"connect\", () => {\n        console.log(\"🧠 Socket connected:\", socket.id);\n        if (!hasConnected) {\n          setupSocketEvents(currentStream);\n          setHasConnected(true);\n        }\n      });\n    }).catch(err => {\n      console.error(\"❌ Error getting user media:\", err);\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const setupSocketEvents = (currentStream) => {\n    socket.on(\"partner\", (partnerId) => {\n      console.log(\"👥 Matched with partner:\", partnerId);\n\n      const newPeer = new Peer({\n        initiator: true,\n        trickle: false,\n        stream: currentStream,\n      });\n\n      newPeer.on(\"signal\", data => {\n        console.log(\"📤 Sending signal to partner\");\n        socket.emit(\"signal\", { to: partnerId, data });\n      });\n\n      newPeer.on(\"stream\", partnerStream => {\n        console.log(\"📥 Received stream from partner\");\n        if (userVideo.current) {\n          userVideo.current.srcObject = partnerStream;\n        }\n      });\n\n      socket.on(\"signal\", ({ data }) => {\n        console.log(\"📩 Signal received by initiator\");\n        newPeer.signal(data);\n      });\n\n      setPeer(newPeer);\n    });\n\n    socket.on(\"signal\", ({ from, data }) => {\n      console.log(\"📩 Signal received by receiver:\", from);\n\n      const newPeer = new Peer({\n        initiator: false,\n        trickle: false,\n        stream: currentStream,\n      });\n\n      newPeer.on(\"signal\", signalData => {\n        console.log(\"📤 Responding to signal from initiator\");\n        socket.emit(\"signal\", { to: from, data: signalData });\n      });\n\n      newPeer.on(\"stream\", partnerStream => {\n        console.log(\"📥 Received stream from initiator\");\n        if (userVideo.current) {\n          userVideo.current.srcObject = partnerStream;\n        }\n      });\n\n      newPeer.signal(data);\n      setPeer(newPeer);\n    });\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>Omegle Clone 🚀</h1>\n      <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\" }}>\n        <div>\n          <h3>You</h3>\n          <video ref={myVideo} autoPlay playsInline muted style={{ width: \"300px\", border: \"1px solid black\" }} />\n        </div>\n        <div>\n          <h3>Stranger</h3>\n          <video ref={userVideo} autoPlay playsInline style={{ width: \"300px\", border: \"1px solid black\" }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}